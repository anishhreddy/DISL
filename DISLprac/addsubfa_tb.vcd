$date
	Wed Sep 10 10:26:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module addsubfa_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module addsubfa_ins $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$var wire 3 ) c [3:1] $end
$scope module stage0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % c $end
$var wire 1 , carry $end
$var wire 1 - sum $end
$upscope $end
$scope module stage1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 c $end
$var wire 1 1 carry $end
$var wire 1 2 sum $end
$upscope $end
$scope module stage2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 c $end
$var wire 1 6 carry $end
$var wire 1 7 sum $end
$upscope $end
$scope module stage3 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : c $end
$var wire 1 " carry $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0;
0:
19
18
17
06
15
04
03
12
11
10
1/
1.
0-
1,
1+
0*
b11 )
b110 (
b100 '
b1010 &
1%
b100 $
b1010 #
1"
b110 !
$end
#10
0:
02
05
06
0"
00
01
17
1;
b0 )
0,
0/
14
09
b1101 !
b1101 (
1-
0.
0%
b101 $
b101 '
b1000 #
b1000 &
#20
0-
b1110 !
b1110 (
12
0+
1.
b100 $
b100 '
b1010 #
b1010 &
#30
1"
07
0;
1/
04
19
b11 !
b11 (
1-
0.
1%
b101 $
b101 '
b1000 #
b1000 &
#40
