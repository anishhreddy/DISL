$date
	Wed Sep 10 03:21:43 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module addsub_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module addsub_ins $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$scope module fourbitadder_ins $end
$var wire 4 ) a [3:0] $end
$var wire 4 * b [3:0] $end
$var wire 1 % cin $end
$var wire 4 + s [3:0] $end
$var wire 1 " cout $end
$var wire 3 , c [3:1] $end
$scope module stage0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 % c $end
$var wire 1 / carry $end
$var wire 1 0 sum $end
$upscope $end
$scope module stage1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 c $end
$var wire 1 4 carry $end
$var wire 1 5 sum $end
$upscope $end
$scope module stage2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 c $end
$var wire 1 9 carry $end
$var wire 1 : sum $end
$upscope $end
$scope module stage3 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 = c $end
$var wire 1 " carry $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0>
0=
1<
1;
1:
09
18
07
06
05
14
13
12
01
00
1/
1.
0-
b11 ,
b100 +
b1011 *
b1000 )
b100 (
b100 '
b1000 &
1%
b100 $
b1000 #
1"
b100 !
$end
#10
08
0=
04
09
0"
1:
1>
03
b0 ,
0/
15
0.
02
17
0<
b100 *
b1110 !
b1110 (
b1110 +
00
11
0%
b1010 #
b1010 &
b1010 )
#20
