$date
	Wed Sep 10 02:59:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module multiplier3_tb $end
$var wire 6 ! s [5:0] $end
$var reg 3 " a [2:0] $end
$var reg 3 # b [2:0] $end
$scope module multiplier3_ins $end
$var wire 3 $ a [2:0] $end
$var wire 3 % b [2:0] $end
$var wire 2 & x [1:0] $end
$var wire 6 ' s [5:0] $end
$var wire 5 ( c [5:1] $end
$scope module stage0 $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 + carry $end
$var wire 1 , sum $end
$upscope $end
$scope module stage1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / c $end
$var wire 1 0 carry $end
$var wire 1 1 sum $end
$upscope $end
$scope module stage2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 carry $end
$var wire 1 5 sum $end
$upscope $end
$scope module stage3 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 carry $end
$var wire 1 9 sum $end
$upscope $end
$scope module stage4 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < c $end
$var wire 1 = carry $end
$var wire 1 > sum $end
$upscope $end
$scope module stage5 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A c $end
$var wire 1 B carry $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1C
1B
1A
1@
1?
0>
1=
1<
1;
0:
09
18
17
16
05
14
13
12
11
10
1/
1.
1-
0,
1+
1*
1)
b11111 (
b110001 '
b1 &
b111 %
b111 $
b111 #
b111 "
b110001 !
$end
#10
0C
1B
1A
1:
0?
1=
19
08
06
1>
00
1<
05
14
12
0/
b11 &
11
1,
b11000 (
0+
b101010 !
b101010 '
0*
0-
b110 #
b110 %
#20
0>
0<
0,
b100100 !
b100100 '
15
b10000 (
04
0)
03
b110 "
b110 $
#30
0B
1C
0A
02
0=
0:
01
0<
0>
b0 &
09
b10100 !
b10100 '
15
b0 (
04
07
0.
13
0;
b100 #
b100 %
b101 "
b101 $
#40
12
b1 &
11
0C
1,
b110 !
b110 '
15
1)
03
1.
0@
b10 #
b10 %
b11 "
b11 $
#50
