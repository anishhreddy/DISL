$date
	Wed Sep 10 12:31:00 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module scomparator_tb $end
$var wire 1 ! XltY $end
$var wire 1 " XgtY $end
$var wire 1 # XeqY $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 1 & cin $end
$scope module scomparator_ins $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 & cin $end
$var wire 4 ) s [3:0] $end
$var wire 4 * c [4:1] $end
$var reg 1 # XeqY $end
$var reg 1 " XgtY $end
$var reg 1 ! XltY $end
$var reg 1 + v $end
$scope module stage0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 & c $end
$var wire 1 . carry $end
$var wire 1 / sum $end
$upscope $end
$scope module stage1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 c $end
$var wire 1 3 carry $end
$var wire 1 4 sum $end
$upscope $end
$scope module stage2 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 7 c $end
$var wire 1 8 carry $end
$var wire 1 9 sum $end
$upscope $end
$scope module stage3 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var wire 1 < c $end
$var wire 1 = carry $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1>
0=
1<
0;
0:
19
18
17
16
15
14
13
12
11
10
1/
1.
1-
1,
1+
b111 *
b1111 )
b1000 (
b111 '
1&
b1000 %
b111 $
0#
1"
0!
$end
#10
0<
08
1!
04
1+
0"
0/
19
b100 )
0>
b1011 *
1=
01
06
1;
0,
05
1:
b110 %
b110 (
b1010 $
b1010 '
#20
0+
1<
1"
0!
1=
19
b1111 *
18
b100 )
0>
16
15
0:
b10 %
b10 (
b110 $
b110 '
#30
1#
1=
09
0>
1<
0!
0+
18
17
0"
b0 )
04
b1111 *
13
11
06
00
b100 %
b100 (
b100 $
b100 '
#40
