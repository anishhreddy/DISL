$date
	Fri Aug 29 20:26:55 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module fourbitaddsub_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 4 $ x [3:0] $end
$var reg 4 % y [3:0] $end
$scope module ins_fourbitaddsub $end
$var wire 1 # cin $end
$var wire 4 & x [3:0] $end
$var wire 4 ' y [3:0] $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$scope module fourbitadder_ins $end
$var wire 1 # cin $end
$var wire 4 ) x [3:0] $end
$var wire 4 * y [3:0] $end
$var wire 4 + sum [3:0] $end
$var wire 1 " cout $end
$var wire 3 , c [3:1] $end
$scope module stage0 $end
$var wire 1 - carry $end
$var wire 1 . sum $end
$var wire 1 / x $end
$var wire 1 0 y $end
$var wire 1 # z $end
$upscope $end
$scope module stage1 $end
$var wire 1 1 carry $end
$var wire 1 2 sum $end
$var wire 1 3 x $end
$var wire 1 4 y $end
$var wire 1 5 z $end
$upscope $end
$scope module stage2 $end
$var wire 1 6 carry $end
$var wire 1 7 sum $end
$var wire 1 8 x $end
$var wire 1 9 y $end
$var wire 1 : z $end
$upscope $end
$scope module stage3 $end
$var wire 1 " carry $end
$var wire 1 ; sum $end
$var wire 1 < x $end
$var wire 1 = y $end
$var wire 1 > z $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0>
0=
1<
1;
0:
19
08
17
06
05
14
03
12
01
00
0/
0.
0-
b0 ,
b1110 +
b110 *
b1000 )
b1110 (
b110 '
b1000 &
b110 %
b1000 $
0#
0"
b1110 !
$end
#20
0"
0>
06
15
17
1;
10
04
09
1=
b1 ,
1-
b1001 *
b1111 !
b1111 (
b1111 +
1.
1/
18
0<
1#
b101 $
b101 &
b101 )
#40
